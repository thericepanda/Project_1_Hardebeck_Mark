--WELCOME TO MY Tuition Reimbursement Management System Demo!
/* DB CONNECTION: markymarksdatabase.c1heybotdkrw.us-east-2.rds.amazonaws.com
   username: TRS
   password: p4ssw0rd
*/
--EMPLOYEE DATA
CREATE TABLE EMPLOYEES(
EMP_ID INTEGER PRIMARY KEY,
EMP_USERNAME VARCHAR2(50) UNIQUE,
EMP_PASSWORD VARCHAR2(50),
FIRSTNAME VARCHAR2(50),
LASTNAME VARCHAR2(50),
EMP_EMAIL VARCHAR2(50) UNIQUE,
EMP_TYPE VARCHAR2(50),
EMP_AVAIL_AMT NUMBER,
EMP_DEPARTMENT VARCHAR2(50),
EMP_BRANCH VARCHAR2(50)
);

-- starter employees
INSERT INTO EMPLOYEES VALUES(EMPID.NEXTVAL,'doom','guy','Mark','Hardebeck','mhardebeck@gmail.com','Benefits Coordinator',1000,'Sales','California');
INSERT INTO EMPLOYEES VALUES(EMPID.NEXTVAL,'bob' ,'dylan','Mark1','Hardebeck','mhardebeck1@gmail.com','Benefits Coordinator',1000,'Tech','New York');
INSERT INTO EMPLOYEES VALUES(EMPID.NEXTVAL,'john','lennon','Mark2','Hardebeck','mhardebeck2@gmail.com','Department Head',1000,'Sales','California');
INSERT INTO EMPLOYEES VALUES(EMPID.NEXTVAL,'ringo','starr','Mark3','Hardebeck','mhardebeck3@gmail.com','Department Head',1000,'Tech','California');
INSERT INTO EMPLOYEES VALUES(EMPID.NEXTVAL,'paul','mccartney','Mark4','Hardebeck','mhardebeck4@gmail.com','Direct Supervisor',1000,'Sales','California');
INSERT INTO EMPLOYEES VALUES(EMPID.NEXTVAL,'george','harrison','Mark5','Hardebeck','mhardebeck5@gmail.com','Employee',1000,'Sales','California');



CREATE SEQUENCE EMPID;

--Update Amount Avavilable
CREATE OR REPLACE PROCEDURE UPDATEAMTAVAIL(EMPID IN INTEGER, NEWAMT IN NUMBER)
AS
BEGIN
UPDATE EMPLOYEES
SET EMP_AVAIL_AMT = NEWAMT
WHERE EMP_ID = EMPID;
COMMIT;
END;
/



--FORM FOR EMPLOYEES TO FILL OUT

CREATE TABLE FORMS(
FORM_ID INTEGER PRIMARY KEY,
EMP_ID INTEGER,
EMP_FIRSTNAME VARCHAR2(50),
EMP_LASTNAME VARCHAR2(50),
EMP_EMAIL VARCHAR2(50),
EMP_TYPE VARCHAR(50),
FORM_EVENT_TYPE VARCHAR2(50),
FORM_SUBMIT_TIME TIMESTAMP,
FORM_EVENT_TIME TIMESTAMP,
FORM_LOCATION VARCHAR2(50),
FORM_DESCRIPTION VARCHAR2(500),
FORM_COST NUMBER,
FORM_RMBRSMNT_AMT NUMBER,
FORM_EMP_AVAIL_AMT NUMBER,
FORM_GRADE_FORMAT_ID INTEGER DEFAULT 3,
FORM_JUSTIFICATION VARCHAR2(500),
FORM_D_SUP_APPORVAL VARCHAR2(10) DEFAULT 'PENDING',
FORM_D_HEAD_APPROVAL VARCHAR2(10) DEFAULT 'PENDING',
FORM_BENCO_APPROVAL VARCHAR2(10) DEFAULT 'PENDING',
FORM_REJECTION_REASON VARCHAR2(500)
);

ALTER TABLE FORMS
ADD CONSTRAINT FK_GRADE_FORMAT_ID
FOREIGN KEY(FORM_GRADE_FORMAT_ID) REFERENCES GRADE_FORMAT(FORMAT_ID);

CREATE SEQUENCE FORMID;

CREATE OR REPLACE PROCEDURE UPDATEFORM(FORMID IN INTEGER, DSUPAPPROVAL IN STRING, DHEADAPPROVAL IN STRING, BENCOAPPROVAL IN STRING, REJECTIONREASON IN STRING)
AS
BEGIN
UPDATE FORMS
SET FORM_D_SUP_APPORVAL = DSUPAPPROVAL, FORM_D_HEAD_APPROVAL = DHEADAPPROVAL, FORM_BENCO_APPROVAL = BENCOAPPROVAL, FORM_REJECTION_REASON = REJECTIONREASON
WHERE FORM_ID = FORMID;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE RETURNMONEY(EMPID IN INTEGER, RETURNAMT IN NUMBER)
AS
BEGIN
UPDATE EMPLOYEES
SET EMP_AVAIL_AMT = EMP_AVAIL_AMT+RETURNAMT
WHERE EMP_ID = EMPID;
COMMIT;
END;
/

CREATE TABLE GRADE_FORMAT(
FORMAT_ID INTEGER PRIMARY KEY,
GRADE_FORMAT VARCHAR2(50),
PASS_REQ VARCHAR2(10),
PRESENTATION_REQ VARCHAR2(10));

INSERT INTO GRADE_FORMAT VALUES(1,'Percentage Grading', '>70','No');
INSERT INTO GRADE_FORMAT VALUES(2,'Letter Grading', 'C','No');
INSERT INTO GRADE_FORMAT VALUES(3,'Mastery Grading', 'Passers','Yes');
INSERT INTO GRADE_FORMAT VALUES(4,'Pass/Fail', 'Pass','Yes');
INSERT INTO GRADE_FORMAT VALUES(5,'Standards Grading', '>70','No');


CREATE TABLE MESSAGES(
FORM_ID INTEGER,
EMP_ID INTEGER,
OLD_RMBRSMNT_AMT NUMBER,
NEW_RMBRSMNT_AMT NUMBER,
URGENT INTEGER,
RESPONSE INTEGER,
ADDITIONAL_INFO VARCHAR2(500)
);

CREATE TABLE APPROVED(
FORM_ID INTEGER,
EMP_ID INTEGER,
FINAL_GRADE BLOB
);